<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
                          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                          http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

    <!-- JMS AMQ Connection Factory -->

    <jee:jndi-lookup id="connectionFactory" jndi-name="ConnectionFactory"
                     expected-type="javax.jms.ConnectionFactory" />

    <!-- JMS AMQ Destination -->
    <jee:jndi-lookup id="destinationIDMNotificationTopic" jndi-name="jms/Services.IDM.Notification.Topic"
                     expected-type="javax.jms.Topic"/>
    <jee:jndi-lookup id="destinationEmailNotificationQueue" jndi-name="jms/AMCAS.Email.Notification.Queue"
                     expected-type="javax.jms.Queue"/>

    <bean id="jmsJndiDestinationResolver" class="org.springframework.jms.support.destination.JndiDestinationResolver">
        <property name="cache" value="true"/>
        <property name="fallbackToDynamicDestination" value="false"/>
        <property name="resourceRef" value="true"/>
    </bean>

    <!-- JMS template -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="destinationResolver" ref="jmsJndiDestinationResolver"/>
        <property name="defaultDestination" ref="destinationEmailNotificationQueue"/>
    </bean>



    <!--  JMS Listeners -->
    <jms:listener-container connection-factory="connectionFactory" destination-type="sharedDurableTopic"
                            destination-resolver="jmsJndiDestinationResolver" concurrency="1"
                            client-id="amcas-core-service-1">
        <jms:listener destination="jms/Services.IDM.Notification.Topic" ref="dataGovernanceNotificationService"
                      subscription="amcas-data-gov" selector="JMSType='ACCOUNT_UPDATE'"/>

        <!-- NOTE: The subscription name MUST BE UNIQUE, when testing locally, please change the subscription to amcas-data-gov-{{developer-name}} -->
    </jms:listener-container>

    <jms:listener-container connection-factory="connectionFactory" destination-type="sharedDurableTopic"
                            destination-resolver="jmsJndiDestinationResolver" concurrency="1"
                            client-id="amcas-core-service-1">
        <jms:listener destination="jms/Services.IDM.Notification.Topic" ref="dataGovernanceNotificationService"
                      subscription="amcas-data-gov" selector="JMSType='ACCOUNT_UPDATE'"/>

        <!-- NOTE: The subscription name MUST BE UNIQUE, when testing locally, please change the subscription to amcas-data-gov-{{developer-name}} -->
    </jms:listener-container>

    <jms:listener-container connection-factory="connectionFactory" destination-type="queue"
                            destination-resolver="jmsJndiDestinationResolver" concurrency="1" acknowledge="transacted">
        <jms:listener destination="jms/AMCAS.Email.Notification.Queue" ref="emailNotificationMessageListener"/>
    </jms:listener-container>

    <bean class="org.example.TopicListener" id="dataGovernanceNotificationService"/>
    <bean class="org.example.QueueListener" id="emailNotificationMessageListener"/>
</beans>